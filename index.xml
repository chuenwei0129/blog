<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>我的个人知识库 on</title><link>https://chuenwei0129.github.io/blog/</link><description>Recent content in 我的个人知识库 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://chuenwei0129.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://chuenwei0129.github.io/blog/git/git-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-cheatsheet/</guid><description>Git 高频操作 Command Action git init 初始化 Git 仓库 git add 文件名 添加文件到暂存区，后面可以跟多个文件，以空格区分 git add .</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-config/</guid><description>git config 常规操作 1 2 3 4 5 6 7 8 // 列出当前配置 git config --list // 列出本地 Repository 配置 git config --local --list // 列出全局配置 git config --global --list // 列出系统配置 git config --system --list 把 Git 的默认分支 master 修改成 main 把默认分支改为 main 1 git config --global init.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git-ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-ssh/</guid><description>Git 配置 SSH 虽然 Git 可以工作在 ssh 与 https 两种协议上，但为了安全性，更多时候会选择 ssh。
生成一个 ssh-key 执行命令
1 ssh-keygen -t rsa -C &amp;#34;example@qq.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git-stash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-stash/</guid><description>git stash 会有这么一个场景，现在你正在用你的 feature 分支上开发新功能。这时，生产环境上出现了一个 bug 需要紧急修复，但是你这部分代码还没开发完，不想提交，怎么办？这个时候可以用 git stash 命令先把工作区已经修改的文件暂存起来，然后切换到 hotfix 分支上进行 bug 的修复，修复完成后，切换回 feature 分支，从堆栈中恢复刚刚保存的内容。
基本命令如下
1 2 3 4 5 6 git stash #把本地的改动暂存起来 git stash save &amp;#34;message&amp;#34; # 执行存储时，添加备注，方便查找。 git stash pop # 应用最近一次暂存的修改，并删除暂存的记录 git stash apply # 应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其他个，git stash apply stash@{$num} git stash list # 查看 stash 有哪些存储 git stash clear # 删除所有缓存的 stash 例如，我正在开发一个新功能，修改了 1.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git/</guid><description>怕遗忘 Git 的我，把相关知识点都记录下来就对了 Git 配置 SSH [ git-ssh]
Git 的工作区域 Workspace：工作区，就是平时进行开发改动的地方，是当前看到最新的内容，在开发的过程也就是对工作区的操作。
Git 可以把工作区中的文件处理、压缩成一个提交对象，也能将取得的提交对象解包成文件同步到工作区中。
Stage / Index：暂存区，当执行 git add 的命令后，工作区的文件就会被移入暂存区，暂存区标记了当前工作区中那些内容是被 Git 管理的，当完成某个需求或者功能后需要提交代码，第一步就是通过 git add 先提交到暂存区。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/notes/%E5%8F%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B0%B1%E8%83%BD%E8%A6%86%E7%9B%96%E6%89%80%E6%9C%89%E6%93%8D%E4%BD%9C%E8%80%8C%E4%B8%94%E8%83%BD%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E4%BD%A0%E5%96%9C%E6%AC%A2%E5%90%97/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/%E5%8F%AA%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B0%B1%E8%83%BD%E8%A6%86%E7%9B%96%E6%89%80%E6%9C%89%E6%93%8D%E4%BD%9C%E8%80%8C%E4%B8%94%E8%83%BD%E6%8F%90%E5%8D%87%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E4%BD%A0%E5%96%9C%E6%AC%A2%E5%90%97/</guid><description>只用命令行就能覆盖所有操作而且能提升工作效率的使用技巧你喜欢吗</description></item><item><title/><link>https://chuenwei0129.github.io/blog/notes/%E6%80%95%E9%81%97%E5%BF%98-Git-%E7%9A%84%E6%88%91%E6%8A%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E9%83%BD%E8%AE%B0%E5%BD%95%E4%B8%8B%E6%9D%A5%E5%B0%B1%E5%AF%B9%E4%BA%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/%E6%80%95%E9%81%97%E5%BF%98-Git-%E7%9A%84%E6%88%91%E6%8A%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E7%82%B9%E9%83%BD%E8%AE%B0%E5%BD%95%E4%B8%8B%E6%9D%A5%E5%B0%B1%E5%AF%B9%E4%BA%86/</guid><description>怕遗忘 Git 的我，把相关知识点都记录下来就对了</description></item><item><title/><link>https://chuenwei0129.github.io/blog/notes/%E6%9C%80%E5%82%BB%E9%80%BC%E7%9A%84%E7%94%A8%E6%88%B7%E8%A2%AB-MacOS-%E7%99%BE%E8%88%AC%E6%8A%98%E7%A3%A8%E5%90%8E%E5%8A%AA%E5%8A%9B%E8%87%B3%E4%BB%8A%E7%BB%88%E5%B0%9D%E5%9B%9E%E6%8A%A5%E7%AA%81%E7%84%B6%E5%BE%97%E5%88%B0%E4%BA%86%E6%9C%80%E5%BC%BA%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/%E6%9C%80%E5%82%BB%E9%80%BC%E7%9A%84%E7%94%A8%E6%88%B7%E8%A2%AB-MacOS-%E7%99%BE%E8%88%AC%E6%8A%98%E7%A3%A8%E5%90%8E%E5%8A%AA%E5%8A%9B%E8%87%B3%E4%BB%8A%E7%BB%88%E5%B0%9D%E5%9B%9E%E6%8A%A5%E7%AA%81%E7%84%B6%E5%BE%97%E5%88%B0%E4%BA%86%E6%9C%80%E5%BC%BA%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid><description>最傻逼的用户，被 MacOS 百般折磨后，努力至今终尝回报，突然得到了最强使用技巧 111</description></item><item><title/><link>https://chuenwei0129.github.io/blog/others/11/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/others/11/</guid><description>每日记录：2022 年 10 月 26 日 今天的待办事项 这条笔记创建于: 2022 年 10 月 26 日，星期三，19: 31。
安然无虞度过这一天 今天学习了什么 这条笔记更新于: 2022 年 十月 月 26 日，星期三，19: 31。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/others/picgo-settings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/others/picgo-settings/</guid><description>PicGo 图床设置 这条笔记创建于: 2022 年 10 月 24 日，星期一，20: 38。
Github 仓库设置 首先你得有一个 GitHub 账号。
1. 新建一个公共仓库 记下你取的仓库名。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/others/publish-foam-notes-through-github-pages/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/others/publish-foam-notes-through-github-pages/</guid><description>通过 Github Pages 发布 Foam 笔记 这条笔记创建于: 2022 年 10 月 24 日，星期一，20: 38。
配置 笔记库基于 foam-template-gatsby-kb 模版创建，有关更多信息，请查看其 Github 仓库。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/others/switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/others/switch/</guid><description>关于我破解了 Switch 并且装满了游戏依然吃灰这件事 这条笔记创建于: 2022 年 10 月 25 日，星期二，13: 17。
SX OS 拥抱大气层 SX 完整拥抱大气层 图文教程</description></item><item><title/><link>https://chuenwei0129.github.io/blog/others/Title-of-my-New-Note/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/others/Title-of-my-New-Note/</guid><description>每日记录：2022 年 10 月 26 日 今天的待办事项 这条笔记创建于: 2022 年 10 月 26 日，星期三，19: 31。
安然无虞度过这一天 今天学习了什么 这条笔记更新于: 2022 年 十月 月 26 日，星期三，19: 31。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/auto-rename-tag/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/auto-rename-tag/</guid><description>Auto Rename Tag 这条笔记创建于: 2022 年 10 月 24 日，星期一，20: 39。
Extension Auto Rename Tag (3.3M downloads): “Automatically rename paired HTML/XML tag, same as Visual Studio IDE does.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/configure-git-default-editor-to-be-vscode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/configure-git-default-editor-to-be-vscode/</guid><description>配置 Git 的默认编辑器为 VSCode 这条笔记创建于: 2022 年 10 月 24 日，星期一，20: 37。
Git 默认编辑器应该是 Vim，世界上最好的编辑器 🐶，不过最新版的 Git 安装时已经可以选择默认编辑器了。Vim 确实很强大，但对我来说可就要了亲命了，因为重度依赖 VSCode。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/foam-guide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/foam-guide/</guid><description>在 VSCode 中使用双链笔记 这条笔记更新于: 2022 年 10 月 24 日，星期一，23: 34。
配置笔记库 在 GitHub 上建立笔记库 使用 foam-template-gatsby-kb 模版在自己的 GitHub 上建立仓库，可以选择是否将仓库设为私有库。仓库建立后，将其 clone 到本地并在 VSCode 中打开。这样以后就可以通过 GitHub 对你的笔记库进行版本控制，也可以通过 Github Pages 发布 Foam 笔记（[ publish-foam-notes-through-github-pages]）。</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/my-vscode-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/my-vscode-config/</guid><description>VSCode 因为插件丰富、功能强大被大家喜欢，真是令人烦恼啊 这条笔记更新于: 2022 年 10 月 24 日，星期一，23: 03。
🎨 主题 我最常用的 VS Code 主题是 Vitesse，目前正在使用。
⭐ 我之前使用过的其他一些主题：</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/useful-vscode-shortcuts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/useful-vscode-shortcuts/</guid><description>有用的 VSCode 快捷键 这条笔记创建于: 2022 年 10 月 24 日，星期一，17: 19。
通用快捷键 command + k + command + s 打开键盘快捷方式，点击右上角三个点显示用户键盘绑定，对单个命令右键菜单可显示是否快捷键冲突</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/vscode-built-in-plugin-emmet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/vscode-built-in-plugin-emmet/</guid><description>VSCode 内置插件 Emmet 这条笔记创建于: 2022 年 10 月 24 日，星期一，20: 36。
^ 返回上层 使用 ^ 运算符，可以爬上树的一个层次，并更改上下文
1 div+div&amp;gt;p&amp;gt;span+em^b 表现为：</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/vscode-remote-ssh-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/vscode-remote-ssh-config/</guid><description>VSCode Remote SSH 配置 这条笔记创建于: 2022 年 10 月 24 日，星期一，20: 36。
插件安装 Mac 本地创建密钥对配置 SSH 本地客户端 在用户主目录下，看看有没有 .</description></item><item><title/><link>https://chuenwei0129.github.io/blog/vscode/vscode-snippets/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/vscode/vscode-snippets/</guid><description>VSCode 使用 Snippets 设置代码块 这条笔记创建于: 2022 年 10 月 24 日，星期一，16: 22。
Snippet 设置 在 Code &amp;gt; Preferences 中选择 User Snippets 在弹出框里选择对应的代码片段语言</description></item><item><title>Switch</title><link>https://chuenwei0129.github.io/blog/notes/%E5%85%B3%E4%BA%8E%E6%88%91%E7%A0%B4%E8%A7%A3%E4%BA%86-Switch-%E5%B9%B6%E4%B8%94%E8%A3%85%E6%BB%A1%E4%BA%86%E6%B8%B8%E6%88%8F%E4%BE%9D%E7%84%B6%E5%90%83%E7%81%B0%E8%BF%99%E4%BB%B6%E4%BA%8B/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/%E5%85%B3%E4%BA%8E%E6%88%91%E7%A0%B4%E8%A7%A3%E4%BA%86-Switch-%E5%B9%B6%E4%B8%94%E8%A3%85%E6%BB%A1%E4%BA%86%E6%B8%B8%E6%88%8F%E4%BE%9D%E7%84%B6%E5%90%83%E7%81%B0%E8%BF%99%E4%BB%B6%E4%BA%8B/</guid><description>关于我破解了 Switch 并且装满了游戏依然吃灰这件事</description></item><item><title>Test</title><link>https://chuenwei0129.github.io/blog/notes/date/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/date/</guid><description>Test</description></item><item><title>Todo Tree 扩展设置</title><link>https://chuenwei0129.github.io/blog/atoms/Todo-Tree-%E6%89%A9%E5%B1%95%E8%AE%BE%E7%BD%AE/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/atoms/Todo-Tree-%E6%89%A9%E5%B1%95%E8%AE%BE%E7%BD%AE/</guid><description>自定义图标 icon - used to set a different icon in the tree view. Must be a valid octicon (see https://octicons.</description></item><item><title>VSCode REST Client 插件测试接口</title><link>https://chuenwei0129.github.io/blog/atoms/VSCode-REST-Client-%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8E%A5%E5%8F%A3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/atoms/VSCode-REST-Client-%E6%8F%92%E4%BB%B6%E6%B5%8B%E8%AF%95%E6%8E%A5%E5%8F%A3/</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 # 获取 users 数据 GET http://127.</description></item><item><title>VSCode 原生高性能括号着色无缝迁移方案</title><link>https://chuenwei0129.github.io/blog/atoms/VSCode-%E5%8E%9F%E7%94%9F%E9%AB%98%E6%80%A7%E8%83%BD%E6%8B%AC%E5%8F%B7%E7%9D%80%E8%89%B2%E6%97%A0%E7%BC%9D%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/atoms/VSCode-%E5%8E%9F%E7%94%9F%E9%AB%98%E6%80%A7%E8%83%BD%E6%8B%AC%E5%8F%B7%E7%9D%80%E8%89%B2%E6%97%A0%E7%BC%9D%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88/</guid><description>VSCode 在最新的 v1.60 版本中原生支持了高性能的多层级括号对着色。
We implemented this feature to address performance issues of the famous Bracket Pair Colorizer extension by CoenraadS.</description></item><item><title>VSCode 因为插件丰富、功能强大被大家喜欢，真是令人烦恼啊</title><link>https://chuenwei0129.github.io/blog/notes/VSCode-%E5%9B%A0%E4%B8%BA%E6%8F%92%E4%BB%B6%E4%B8%B0%E5%AF%8C%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E8%A2%AB%E5%A4%A7%E5%AE%B6%E5%96%9C%E6%AC%A2%E7%9C%9F%E6%98%AF%E4%BB%A4%E4%BA%BA%E7%83%A6%E6%81%BC%E5%95%8A/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/VSCode-%E5%9B%A0%E4%B8%BA%E6%8F%92%E4%BB%B6%E4%B8%B0%E5%AF%8C%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E8%A2%AB%E5%A4%A7%E5%AE%B6%E5%96%9C%E6%AC%A2%E7%9C%9F%E6%98%AF%E4%BB%A4%E4%BA%BA%E7%83%A6%E6%81%BC%E5%95%8A/</guid><description>🎨 主题 我最常用的 VSCode 主题是 Vitesse，目前正在使用。
⭐ 我之前使用过的其他一些主题：
GitHub Theme 👉 我使用 Github Light Default Aofuji Light Theme 👉 我使用 Oranji (No Italic) 拓展：[atoms/VSCode 自定义主题配色]</description></item><item><title>VSCode 自定义主题配色</title><link>https://chuenwei0129.github.io/blog/atoms/VSCode-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E9%85%8D%E8%89%B2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/atoms/VSCode-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%BB%E9%A2%98%E9%85%8D%E8%89%B2/</guid><description>选择主题插件 先选择一款别人制作好的。然后在这基础上，自己再做细节的微调。
在 Extensions 里面搜索关键字 theme ，一个个试，寻找自己看的最顺眼的插件。
这里以一个名为 Github Plus Theme 的主题演示。
把它安装起来，下面就以它为基础，进行界面的定制。
Mac 中 VSCode 插件都是安装在 /Users/{用户名}/.vscode/extensions/ 目录中的。</description></item><item><title>Windows</title><link>https://chuenwei0129.github.io/blog/notes/%E5%91%BC%E5%91%BCWindows-%E9%85%B1%E6%8A%B1%E6%AD%89%E4%BA%86%E5%91%A2%E6%88%91%E5%8F%AF%E8%83%BD%E5%9B%9E%E4%B8%8D%E5%8E%BB%E4%BA%86%E8%83%BD%E5%A4%9F%E5%87%BA%E7%94%9F%E5%B9%B6%E4%B8%8E%E4%BD%A0%E7%9B%B8%E9%81%87%E7%9C%9F%E6%98%AF%E5%A4%AA%E5%A5%BD%E4%BA%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/notes/%E5%91%BC%E5%91%BCWindows-%E9%85%B1%E6%8A%B1%E6%AD%89%E4%BA%86%E5%91%A2%E6%88%91%E5%8F%AF%E8%83%BD%E5%9B%9E%E4%B8%8D%E5%8E%BB%E4%BA%86%E8%83%BD%E5%A4%9F%E5%87%BA%E7%94%9F%E5%B9%B6%E4%B8%8E%E4%BD%A0%E7%9B%B8%E9%81%87%E7%9C%9F%E6%98%AF%E5%A4%AA%E5%A5%BD%E4%BA%86/</guid><description>呼呼&amp;hellip;Windows 酱&amp;hellip;抱歉了呢&amp;hellip;我可能回不去了&amp;hellip;&amp;hellip;能够出生，并与你相遇，真是太好了&amp;hellip;&amp;hellip; 二级标题 正文</description></item><item><title>每日记录：2022 年 10 月 27 日 星期四</title><link>https://chuenwei0129.github.io/blog/journal/2022-10-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/journal/2022-10-27/</guid><description>今天的待办事项 安然无虞度过这一天
今天学习了什么？ 有什么值得记录的吗？ 推迟到之后的内容 有时是会有这种事情发生的</description></item><item><title>每日记录：2022 年 10 月 28 日 星期五</title><link>https://chuenwei0129.github.io/blog/journal/2022-10-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/journal/2022-10-28/</guid><description>今天的待办事项 安然无虞度过这一天
今天学习了什么？ 有什么值得记录的吗？ 推迟到之后的内容 有时是会有这种事情发生的</description></item></channel></rss>