<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gits on</title><link>https://chuenwei0129.github.io/blog/git/</link><description>Recent content in Gits on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://chuenwei0129.github.io/blog/git/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://chuenwei0129.github.io/blog/git/git-cheatsheet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-cheatsheet/</guid><description>Git 高频操作 Command Action git init 初始化 Git 仓库 git add 文件名 添加文件到暂存区，后面可以跟多个文件，以空格区分 git add .</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git-config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-config/</guid><description>git config 常规操作 1 2 3 4 5 6 7 8 // 列出当前配置 git config --list // 列出本地 Repository 配置 git config --local --list // 列出全局配置 git config --global --list // 列出系统配置 git config --system --list 把 Git 的默认分支 master 修改成 main 把默认分支改为 main 1 git config --global init.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git-ssh/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-ssh/</guid><description>Git 配置 SSH 虽然 Git 可以工作在 ssh 与 https 两种协议上，但为了安全性，更多时候会选择 ssh。
生成一个 ssh-key 执行命令
1 ssh-keygen -t rsa -C &amp;#34;example@qq.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git-stash/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git-stash/</guid><description>git stash 会有这么一个场景，现在你正在用你的 feature 分支上开发新功能。这时，生产环境上出现了一个 bug 需要紧急修复，但是你这部分代码还没开发完，不想提交，怎么办？这个时候可以用 git stash 命令先把工作区已经修改的文件暂存起来，然后切换到 hotfix 分支上进行 bug 的修复，修复完成后，切换回 feature 分支，从堆栈中恢复刚刚保存的内容。
基本命令如下
1 2 3 4 5 6 git stash #把本地的改动暂存起来 git stash save &amp;#34;message&amp;#34; # 执行存储时，添加备注，方便查找。 git stash pop # 应用最近一次暂存的修改，并删除暂存的记录 git stash apply # 应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其他个，git stash apply stash@{$num} git stash list # 查看 stash 有哪些存储 git stash clear # 删除所有缓存的 stash 例如，我正在开发一个新功能，修改了 1.</description></item><item><title/><link>https://chuenwei0129.github.io/blog/git/git/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chuenwei0129.github.io/blog/git/git/</guid><description>怕遗忘 Git 的我，把相关知识点都记录下来就对了 Git 配置 SSH [ git-ssh]
Git 的工作区域 Workspace：工作区，就是平时进行开发改动的地方，是当前看到最新的内容，在开发的过程也就是对工作区的操作。
Git 可以把工作区中的文件处理、压缩成一个提交对象，也能将取得的提交对象解包成文件同步到工作区中。
Stage / Index：暂存区，当执行 git add 的命令后，工作区的文件就会被移入暂存区，暂存区标记了当前工作区中那些内容是被 Git 管理的，当完成某个需求或者功能后需要提交代码，第一步就是通过 git add 先提交到暂存区。</description></item></channel></rss>